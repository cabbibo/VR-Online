v. 1.37 :

New :
- Support ScriptableObject.
- Can add a group description label under group header.

Fix :
- Two classes were not inside the namespace EasyEditor.

v. 1.36 :

New :
- Inline rendering of custom class. Does not support inline rendering inside lists for the moment.

Fix :
- Prefab and Undo operation are refreshed right after being executed.
- Width of properties horizontally serialized field improved.
- Every examples added to the namespace EasyEditor.

v. 1.35 :

Fix :
- Prefab and Undo operation are refreshed right after being executed.

v. 1.34 :
New :
- Comments can be added under properties in the inspector with the attribute [Comment("")].
- Properties can be hidden based on the value of another property with the attribute [Visible(string id, object value)].
- Consecutive properties can be layed out horizontally with the attributes [BeginHorizontal], [EndHorizontal].
- EETooltip attribute allows to add tooltip to button added in the inspector through [Inspector] attribute.

v. 1.33 :
Fix :
- Was not compiling correctly because PropertyDrawer were used outside of Editor folder.

v. 1.32 :
New :
- Custom editor code can be rendered at any position in the inspector.

v. 1.31 :
Fix :
- Will not try to render fields that are marked as Serializable in .NET but are not really serialized by Unity (ex : long, short ...).

v. 1.30 :
New :
- Custom class and struct with the attribute System.Serializable are fully compatible with the reorderable list.
The height of the element in the list will change based on if the custom class is unfold or not.

Fix :
- The editor script generated from a Monobehaviour under a namespace will not generate any compilation error.

v. 1.23 :
New :
- pdf documentation included.

v. 1.22 :
New :
- The serialized lists are rendered with a customization provided by an open source project : Rotorz (https://bitbucket.org/rotorz/reorderable-list-editor-field-for-unity/overview).
It allows a better integration of the lists in the inspector and also a context menu to insert elements at a specific position in the list.

v. 1.2 :
New :
- No need to add an attribute for each field to set the group they belong to. Every fields under an attribute with the group specified will belong to this group.
- More examples to show each features.

v. 1.1 :
New :
- Button can be rendered to trigger function in the monobehaviour but also in the editor script.
- All fields displayed by Unity in the inspector by default will be displayed even if the attribute [Inspector] is not specified. 
This include public fields and fields with attributes [SerializeField], [System.Serializable].
- Groups and fields can be hidden or displayed in the editor script.

v. 1 :
- Unity Serialized Type, IList of serialized type and Button can be rendered in the inspector just with the help of attributes in the code.